{"ast":null,"code":"var _jsxFileName = \"/home/milton/Desktop/Projects/game-of-life/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useCallback, useState } from 'react';\nimport { produce } from 'immer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst numRows = 10;\nconst numCols = 10;\nfunction App() {\n  _s();\n  const [grid, setGrid] = useState(() => {\n    const rows = [];\n    for (let i = 0; i < numRows; i++) {\n      rows.push(Array.from(Array(numCols), () => 0));\n    }\n    return rows;\n  });\n  console.log(grid);\n  const [running, setRunning] = useState(false);\n  const runSimulation = useCallback(() => {\n    if (!running) return;\n    //simulate \n    setTimeout(runSimulation, 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setRunning(!running);\n      },\n      children: running ? \"Stop\" : \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${numCols},20px)`\n      },\n      children: grid.map((rows, i) => rows.map((cols, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          const newGrid = produce(grid, gridCopy => {\n            gridCopy[i][j] = grid[i][j] ? 0 : 1;\n          });\n          setGrid(newGrid);\n        },\n        style: {\n          width: 20,\n          height: 20,\n          backgroundColor: grid[i][j] ? \"orange\" : undefined,\n          border: \"solid 1px black\",\n          borderRadius: '2px'\n        }\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"GsMMYzfiy7H0/dgRdZonhzN1ixw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useCallback","useState","produce","jsxDEV","_jsxDEV","Fragment","_Fragment","numRows","numCols","App","_s","grid","setGrid","rows","i","push","Array","from","console","log","running","setRunning","runSimulation","setTimeout","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","map","cols","j","newGrid","gridCopy","width","height","backgroundColor","undefined","border","borderRadius","_c","$RefreshReg$"],"sources":["/home/milton/Desktop/Projects/game-of-life/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useCallback, useState } from 'react';\nimport { produce } from 'immer';\n\nconst numRows = 10;\nconst numCols = 10;\nfunction App() {\n  const [grid, setGrid] = useState(() => {\n    const rows = [];\n    for (let i = 0; i < numRows; i++) {\n      rows.push(Array.from(Array(numCols), () => 0));\n    }\n    return rows;\n  });\n  console.log(grid);\n  const [running, setRunning] = useState(false);\n\n  const runSimulation = useCallback(()=>{\n    if(!running) return;\n    //simulate \n    setTimeout(runSimulation,1000);\n  },[]);\n  return (\n    <>\n      <button onClick={()=>{\n        setRunning(!running);\n      }}>\n        {running ? \"Stop\" : \"Start\"}\n      </button>\n      <div style={{\n        display: 'grid',\n        gridTemplateColumns: `repeat(${numCols},20px)`\n      }}>\n        {grid.map((rows, i) =>\n          rows.map((cols, j) => (\n            <div\n              onClick={() => {\n                const newGrid = produce(grid, gridCopy => {\n                  gridCopy[i][j] = grid[i][j] ? 0 : 1;\n                });\n                setGrid(newGrid);\n              }}\n              key={`${i}-${j}`}\n              style={{\n                width: 20,\n                height: 20,\n                backgroundColor: grid[i][j] ? \"orange\" : undefined,\n                border: \"solid 1px black\",\n                borderRadius: '2px'\n              }}\n            />\n          ))\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,SAASC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,OAAO,GAAG,EAAE;AAClB,MAAMC,OAAO,GAAG,EAAE;AAClB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,MAAM;IACrC,MAAMY,IAAI,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,OAAO,EAAEO,CAAC,EAAE,EAAE;MAChCD,IAAI,CAACE,IAAI,CAACC,KAAK,CAACC,IAAI,CAACD,KAAK,CAACR,OAAO,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;IAChD;IACA,OAAOK,IAAI;EACb,CAAC,CAAC;EACFK,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;EACjB,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMqB,aAAa,GAAGtB,WAAW,CAAC,MAAI;IACpC,IAAG,CAACoB,OAAO,EAAE;IACb;IACAG,UAAU,CAACD,aAAa,EAAC,IAAI,CAAC;EAChC,CAAC,EAAC,EAAE,CAAC;EACL,oBACElB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAI;QACnBJ,UAAU,CAAC,CAACD,OAAO,CAAC;MACtB,CAAE;MAAAI,QAAA,EACCJ,OAAO,GAAG,MAAM,GAAG;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACTzB,OAAA;MAAK0B,KAAK,EAAE;QACVC,OAAO,EAAE,MAAM;QACfC,mBAAmB,EAAG,UAASxB,OAAQ;MACzC,CAAE;MAAAgB,QAAA,EACCb,IAAI,CAACsB,GAAG,CAAC,CAACpB,IAAI,EAAEC,CAAC,KAChBD,IAAI,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACf/B,OAAA;QACEqB,OAAO,EAAEA,CAAA,KAAM;UACb,MAAMW,OAAO,GAAGlC,OAAO,CAACS,IAAI,EAAE0B,QAAQ,IAAI;YACxCA,QAAQ,CAACvB,CAAC,CAAC,CAACqB,CAAC,CAAC,GAAGxB,IAAI,CAACG,CAAC,CAAC,CAACqB,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;UACrC,CAAC,CAAC;UACFvB,OAAO,CAACwB,OAAO,CAAC;QAClB,CAAE;QAEFN,KAAK,EAAE;UACLQ,KAAK,EAAE,EAAE;UACTC,MAAM,EAAE,EAAE;UACVC,eAAe,EAAE7B,IAAI,CAACG,CAAC,CAAC,CAACqB,CAAC,CAAC,GAAG,QAAQ,GAAGM,SAAS;UAClDC,MAAM,EAAE,iBAAiB;UACzBC,YAAY,EAAE;QAChB;MAAE,GAPI,GAAE7B,CAAE,IAAGqB,CAAE,EAAC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQjB,CACF,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACN,CAAC;AAEP;AAACnB,EAAA,CAlDQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}